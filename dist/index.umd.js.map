{"version":3,"file":"index.umd.js","sources":["../index.js"],"sourcesContent":["const fse = require(\"fs-extra\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst name = require(\"./package.json\").name;\n\nconst isDir = location => fs.statSync(location).isDirectory();\nconst gatherFiles = location => pattern => {\n  return fs.readdirSync(location).reduce((last, file) => {\n    const fileInAbs = path.join(location, \"/\", file);\n    if (isDir(fileInAbs)) {\n      last.concat(gatherFiles(path.join(location, \"/\", file))(pattern));\n    } else {\n      if (pattern.test(fileInAbs)) {\n        last.push(fileInAbs);\n      }\n    }\n    return last;\n  }, []);\n};\n\n/**\n * if copy file from directory\n * generate proper dest path\n * @param {string} dirFromPath\n * @param {string} dirToPath\n * @returns {function(string, boolean=)}\n */\nconst getDestPath = (dirFromPath, dirToPath) => (\n  fileFromPath,\n  flatten = false\n) => {\n  const relativePath = flatten\n    ? path.basename(fileFromPath)\n    : path.relative(dirFromPath, fileFromPath);\n  return path.join(dirToPath, \"/\", relativePath);\n};\n\n/**\n * @typedef {object} CopyItem\n * @property {string} from\n * @property {string} to\n * @property {function(string, string)=} filter\n * @property {regexp=} pattern\n * @property {boolean=} flatten\n */\n\nclass CopyNoLoopPlugin {\n  /**\n   * @param {object} options\n   * @param {CopyItem[]} options.list\n   * @param {string=} options.root root directory\n   */\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    compiler.hooks.done.tap(\"CopyNoLoopPlugin\", () => {\n      const { list, root } = this.options;\n      if (!Array.isArray(list)) return;\n      let listMut = list.slice();\n      if (root) {\n        // check for absolute\n        if (!path.isAbsolute(root)) {\n          throw new Error(`[${name}]: root needs to be an absolute path!`);\n        }\n        listMut = listMut.map(item => {\n          return {\n            ...item,\n            from: path.resolve(root, item.from),\n            to: path.resolve(root, item.to)\n          };\n        });\n      }\n      listMut.forEach(item => {\n        const {\n          from,\n          to,\n          filter = () => true,\n          pattern,\n          flatten = false\n        } = item;\n        if (isDir(from) && pattern) {\n          const files = gatherFiles(from)(pattern);\n          files.forEach(file => {\n            const dest = getDestPath(from, to)(file, flatten);\n            fse.copySync(file, dest, { filter });\n          });\n        } else {\n          fse.copySync(from, to, {\n            filter\n          });\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = CopyNoLoopPlugin;\n"],"names":["const","fse","require","fs","path","name","isDir","location","statSync","isDirectory","gatherFiles","pattern","readdirSync","reduce","last","file","fileInAbs","join","concat","test","push","CopyNoLoopPlugin","options","this","apply","compiler","hooks","done","tap","Array","isArray","list","listMut","slice","root","isAbsolute","Error","map","item","Object","from","resolve","to","forEach","dirFromPath","dirToPath","dest","fileFromPath","flatten","relativePath","basename","relative","copySync","filter","module","exports"],"mappings":"0IAAAA,IAAMC,EAAMC,QAAQ,YACdC,EAAKD,QAAQ,MACbE,EAAOF,QAAQ,QACfG,EAAOH,QAAQ,kBAAkBG,KAEjCC,WAAQC,UAAYJ,EAAGK,SAASD,GAAUE,eAC1CC,WAAcH,mBAAYI,UACvBR,EAAGS,YAAYL,GAAUM,gBAAQC,EAAMC,GAC5Cf,IAAMgB,EAAYZ,EAAKa,KAAKV,EAAU,IAAKQ,GAQ3C,OAPIT,EAAMU,GACRF,EAAKI,OAAOR,EAAYN,EAAKa,KAAKV,EAAU,IAAKQ,GAArCL,CAA4CC,IAEpDA,EAAQQ,KAAKH,IACfF,EAAKM,KAAKJ,GAGPF,GACN,MA6BCO,EAMJ,SAAYC,GACVC,KAAKD,QAAUA,eAGjBE,eAAMC,gBACKC,MAAMC,KAAKC,IAAI,oCACCL,EAAKD,0BAC5B,GAAKO,MAAMC,QAAQC,GAAnB,KACIC,EAAUD,EAAKE,WACfC,EAAM,KAEH9B,EAAK+B,WAAWD,SACb,IAAIE,UAAU/B,6CAEZ2B,EAAQK,aAAIC,UACbC,iBACFD,GACHE,KAAMpC,EAAKqC,QAAQP,EAAMI,EAAKE,MAC9BE,GAAItC,EAAKqC,QAAQP,EAAMI,EAAKI,QAIlCV,EAAQW,iBAAQL,mEAIG,IACf,6CACU,GAERhC,EAAMkC,IAAS7B,GACHD,EAAY8B,EAAZ9B,CAAkBC,GAC1BgC,iBAAQ5B,GACZf,IA1DS4C,EAAaC,EA0DhBC,GA1DGF,EA0DgBJ,EA1DHK,EA0DSH,WAzDzCK,EACAC,mBAAU,GAEVhD,IAAMiD,EAAeD,EACjB5C,EAAK8C,SAASH,GACd3C,EAAK+C,SAASP,EAAaG,GAC/B,OAAO3C,EAAKa,KAAK4B,EAAW,IAAKI,KAmDYlC,EAAMiC,GACzC/C,EAAImD,SAASrC,EAAM+B,EAAM,QAAEO,MAG7BpD,EAAImD,SAASZ,EAAME,EAAI,QACrBW,UAQZC,OAAOC,QAAUlC"}